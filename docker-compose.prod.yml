version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: orthoandspinetools-postgres
    environment:
      POSTGRES_DB: orthoandspinetools
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - orthoandspinetools-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: orthoandspinetools-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/orthoandspinetools
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: https://orthoandspinetools.com
    depends_on:
      - postgres
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - orthoandspinetools-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: orthoandspinetools-frontend
    environment:
      VITE_API_URL: https://orthoandspinetools.com/api
    depends_on:
      - backend
    networks:
      - orthoandspinetools-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: orthoandspinetools-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - orthoandspinetools-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  orthoandspinetools-network:
    driver: bridge
